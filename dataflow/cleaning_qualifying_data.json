{
	"name": "cleaning_qualifying_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_qualfying_data",
						"type": "DatasetReference"
					},
					"name": "load"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_qualifying_cleaned_data",
						"type": "DatasetReference"
					},
					"name": "save"
				}
			],
			"transformations": [
				{
					"name": "renameColumns"
				},
				{
					"name": "addCurrentTimestamp"
				}
			],
			"scriptLines": [
				"source(output(",
				"          qualifyId as integer,",
				"          raceId as integer,",
				"          driverId as integer,",
				"          constructorId as integer,",
				"          number as integer,",
				"          position as integer,",
				"          q1 as string,",
				"          q2 as string,",
				"          q3 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> load",
				"load select(mapColumn(",
				"          qualify_id = qualifyId,",
				"          race_id = raceId,",
				"          driver_id = driverId,",
				"          constructor_id = constructorId,",
				"          number,",
				"          position,",
				"          qualifier1 = q1,",
				"          qualifier2 = q2,",
				"          qualifier3 = q3",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> renameColumns",
				"renameColumns derive(ingestion_time = currentTimestamp()) ~> addCurrentTimestamp",
				"addCurrentTimestamp sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> save"
			]
		}
	}
}