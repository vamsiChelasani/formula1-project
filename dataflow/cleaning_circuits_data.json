{
	"name": "cleaning_circuits_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_circuits_data",
						"type": "DatasetReference"
					},
					"name": "rawCircuitsData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_circuits_cleaned_data",
						"type": "DatasetReference"
					},
					"name": "save"
				}
			],
			"transformations": [
				{
					"name": "renamingColumns"
				},
				{
					"name": "AddTimeStampColumn"
				}
			],
			"scriptLines": [
				"source(output(",
				"          circuitId as integer,",
				"          circuitRef as string,",
				"          name as string,",
				"          location as string,",
				"          country as string,",
				"          lat as double,",
				"          lng as double,",
				"          alt as integer,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> rawCircuitsData",
				"rawCircuitsData select(mapColumn(",
				"          circuit_id = circuitId,",
				"          circuit_ref = circuitRef,",
				"          name,",
				"          location,",
				"          country,",
				"          latitude = lat,",
				"          longitude = lng,",
				"          altitude = alt",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> renamingColumns",
				"renamingColumns derive(ingestion_date = currentTimestamp()) ~> AddTimeStampColumn",
				"AddTimeStampColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> save"
			]
		}
	}
}