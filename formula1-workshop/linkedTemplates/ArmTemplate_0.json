{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "formula1-workshop"
		},
		"ls_datalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_datalake'"
		},
		"ls_datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://formula1datalakeacc.dfs.core.windows.net/"
		},
		"ls_http_raw_f1_data_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().baseUrl}"
		},
		"tg_process_formula1_data_properties_pl_process_formula1_data_parameters_p_trigger_date": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"tg_process_formula1_data_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f75834b8-9d1d-49cb-9939-984118aaa586/resourceGroups/formula1-project_rg/providers/Microsoft.Storage/storageAccounts/formula1datalakeacc"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks_formula_one')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3327119798485423.3.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/f75834b8-9d1d-49cb-9939-984118aaa586/resourceGroups/formula1-project_rg/providers/Microsoft.Databricks/workspaces/formula1-project-ws",
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "12.2.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_datalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http_raw_f1_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"baseUrl": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_raw_f1_data_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_config_file_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ingestion"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "config_file_list.csv",
						"folderPath": "config",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "baseUrl",
						"type": "String"
					},
					{
						"name": "relativeUrl",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_data_lake_raw_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"ingestionDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ingestion"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('raw/',dataset().ingestionDate)",
							"type": "Expression"
						},
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_data_http')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_raw_f1_data",
					"type": "LinkedServiceReference",
					"parameters": {
						"baseUrl": {
							"value": "@dataset().baseUrl",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"relativeUrl": {
						"type": "string"
					},
					"baseUrl": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ingestion"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeUrl",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http_raw_f1_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_storage_folder_validation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_trigger_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('raw/',formatDateTime(dataset().p_trigger_date,'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "circuitId",
						"type": "String"
					},
					{
						"name": "circuitRef",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "lng",
						"type": "String"
					},
					{
						"name": "alt",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_clean_formula1_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get folders details",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_storage_folder_validation",
								"type": "DatasetReference",
								"parameters": {
									"p_trigger_date": {
										"value": "@pipeline().parameters.p_trigger_date",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Folder Exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get folders details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get folders details').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Clean circuits file",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/clean_data/clean_circuits_data",
										"baseParameters": {
											"file_date_parameter": {
												"value": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Clean races file",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/clean_data/clean_races_data",
										"baseParameters": {
											"file_date_parameter": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Clean constructors file",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/clean_data/clean_constructors_data",
										"baseParameters": {
											"file_date_parameter": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Clean drivers file",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/clean_data/clean_drivers_data",
										"baseParameters": {
											"file_date_parameter": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Clean lap_times file",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/clean_data/clean_lap_times_data",
										"baseParameters": {
											"file_date_parameter": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Clean pit_stops file",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/clean_data/clean_pit_stops_data",
										"baseParameters": {
											"file_date_parameter": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Clean qualifying file",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/clean_data/clean_qualifying_data",
										"baseParameters": {
											"file_date_parameter": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Clean results file",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/clean_data/clean_results_data",
										"baseParameters": {
											"file_date_parameter": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_trigger_date": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_storage_folder_validation')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks_formula_one')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_raw_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "config file list",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_config_file_list",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "iterate through file list",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "config file list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('config file list').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ingest data to data lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_raw_data_http",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@item().relativeUrl",
													"type": "Expression"
												},
												"baseUrl": {
													"value": "@item().baseUrl",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_data_lake_raw_data",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().fileName",
													"type": "Expression"
												},
												"ingestionDate": {
													"value": "@utcNow('yyyy-MM-dd')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "data ingestion"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-17T20:40:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_config_file_list')]",
				"[concat(variables('factoryId'), '/datasets/ds_raw_data_http')]",
				"[concat(variables('factoryId'), '/datasets/ds_data_lake_raw_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_transform_formula1_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get folders details",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_storage_folder_validation",
								"type": "DatasetReference",
								"parameters": {
									"p_trigger_date": {
										"value": "@pipeline().parameters.p_trigger_date",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Folder Exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get folders details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get folders details').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "process race results",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "process calculated results",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/process_data/race_results_data",
										"baseParameters": {
											"file_date_parameter": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "process drivers standings",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "process race results",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/analysis/drivers_standings",
										"baseParameters": {
											"file_date_parameter": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "process constructors standings",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "process drivers standings",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/analysis/team_standings",
										"baseParameters": {
											"file_date_parameter": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "process calculated results",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/formula-one-db/process_data/calculated_results",
										"baseParameters": {
											"file_date_parameter": {
												"value": "@formatDateTime(pipeline().parameters.p_trigger_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_formula_one",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_trigger_date": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_storage_folder_validation')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks_formula_one')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_formula1_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute cleaning pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_clean_formula1_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_trigger_date": {
									"value": "@pipeline().parameters.p_trigger_date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute transform pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute cleaning pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_transform_formula1_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_trigger_date": {
									"value": "@pipeline().parameters.p_trigger_date",
									"type": "Expression"
								}
							}
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_trigger_date": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_clean_formula1_data')]",
				"[concat(variables('factoryId'), '/pipelines/pl_transform_formula1_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_raw_data ingestion')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_ingest_raw_data",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-08-19T22:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"weekDays": [
								"Sunday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_raw_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_process_formula1_data')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_process_formula1_data",
							"type": "PipelineReference"
						},
						"parameters": {
							"p_trigger_date": "[parameters('tg_process_formula1_data_properties_pl_process_formula1_data_parameters_p_trigger_date')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/rawdata/blobs/raw/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tg_process_formula1_data_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_process_formula1_data')]"
			]
		}
	]
}