{
	"name": "cleaning_races_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_races_data",
						"type": "DatasetReference"
					},
					"name": "rawRacesData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_races_cleaned_data",
						"type": "DatasetReference"
					},
					"name": "save"
				}
			],
			"transformations": [
				{
					"name": "dropColumns"
				},
				{
					"name": "newColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          raceId as integer,",
				"          year as integer,",
				"          round as integer,",
				"          circuitId as integer,",
				"          name as string,",
				"          date as string,",
				"          time as string,",
				"          url as string,",
				"          fp1_date as string,",
				"          fp1_time as string,",
				"          fp2_date as string,",
				"          fp2_time as string,",
				"          fp3_date as string,",
				"          fp3_time as string,",
				"          quali_date as string,",
				"          quali_time as string,",
				"          sprint_date as string,",
				"          sprint_time as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> rawRacesData",
				"newColumns select(mapColumn(",
				"          race_id = raceId,",
				"          year,",
				"          round,",
				"          circuit_id = circuitId,",
				"          name,",
				"          race_timestamp,",
				"          ingestion_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> dropColumns",
				"rawRacesData derive(race_timestamp = toTimestamp(concat(date,' ',time), 'yyyy-MM-dd HH:mm:ss'),",
				"          ingestion_date = currentTimestamp()) ~> newColumns",
				"dropColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> save"
			]
		}
	}
}